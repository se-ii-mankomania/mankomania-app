plugins {
    alias(libs.plugins.androidApplication)
    //id "jacoco"
    id "org.sonarqube" version "4.4.1.3373"
}

android {
    namespace 'com.example.mankomania'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.mankomania"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //testOptions {
    //    unitTests.all {
    //        useJUnitPlatform()
    //        finalizedBy jacocoTestReport
    //    }
    //}
}

//tasks.register('jacocoTestReport', JacocoReport) {
//    dependsOn 'testDebugUnitTest'

//   reports {
//        xml.required = true
//        xml.destination file("${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
//    }

//    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
//    def debugTree = fileTree(dir: "${project.layout.buildDirectory.get().asFile}/intermediates/javac/debug", excludes: fileFilter)
//    def mainSrc = "${project.projectDir}/src/main/java"

//    sourceDirectories.from = files([mainSrc])
//    classDirectories.from = files([debugTree])
//    executionData.from = files("${project.layout.buildDirectory.get().asFile}/jacoco/testDebugUnitTest.exec")
//}


dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    // No such property ...
    // no time to fix rn
    //testImplementation libs.junit.jupiter.api
    //testRuntimeOnly libs.junit.jupiter.engine
    //androidTestImplementation libs.ext.junit
    //androidTestImplementation libs.espresso.core
}

sonar {
    properties {
        property "sonar.projectKey", "se-ii-mankomania_mankomania-app"
        property "sonar.organization", "se-ii-mankomania"
        property "sonar.host.url", "https://sonarcloud.io"

        //property "sonar.java.coveragePlugin", "jacoco"
        //property "sonar.coverage.jacoco.xmlReportPaths", "${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"

        //property "sonar.exclusions", "**/Board.java,**/ChooseYourCharacter.java," +
        //        "**/Event_RollDice.java,**/FinancesAndStocks.java,**/GameScore.java," +
        //        "**/MainActivityLogin.java,**/PlayerViewModel.java," +
        //        "**/Register.java,**/ToolbarFunctionalities.java"
        //property "sonar.sources", ["src/test", "src/main/java"]
        //property "sonar.tests", "src/test"
        //property "sonar.sourceEncoding", "UTF-8"
        //property "sonar.test.inclusions", ["src/test/java"]
        //property "sonar.coverage.exclusions", ["**src/main/**"]
    }
}